/* "import "redux"" is auto-generated by Snack after importing from "react-redux" */
import "redux" // 3.7.2
// @TO-DO: Delete above after Snack fix this bug

import React, { Component } from 'react'
import { View, StyleSheet } from 'react-native'
import { connect } from 'react-redux' // 5.0.6

import { resetToPlayAgain } from './../state/modules/AllActions'
import { navigateWithoutBack } from './../navigation'

import { 
  Button,
  ResultHeadline,
  ResultReport,
} from './../components'

import { FallbackUI, withErrorBoundary } from './../error'

class ResultScreen extends Component {
  handlePlayAgain = () => {
    const { navigation, resetToPlayAgain } = this.props

    resetToPlayAgain()
    navigation.dispatch(navigateWithoutBack('Play'))
  }

  render() {
    const { navigation, results, score, numberOfQuestions, isLoading } = this.props

    if (!results || results.length === 0 && !isLoading) {
      const errorMessage = 'Unable to show results'
      throw new Error(errorMessage)
    }
  
    return (
      <View style={styles.container}> 
        <ResultHeadline score={score} numberOfQuestions={numberOfQuestions} />
        <ResultReport results={results} />
        
        <Button label='PLAY AGAIN' onPress={this.handlePlayAgain} />
      </View>
    )
  }
}


const mapStateToProps = ({ answer: { score, results }, fetchQuestion: { numberOfQuestions }, status: { isLoading } }) => {

  return { results, score, numberOfQuestions, isLoading }
}

const connectedResultScreen = connect(mapStateToProps, { resetToPlayAgain })(ResultScreen)

export default withErrorBoundary(connectedResultScreen, FallbackUI)

const styles = StyleSheet.create(
  {
    container: {
      flex: 1,
      justifyContent: 'space-around',
      backgroundColor: '#A2E4F9',
      width: '100%',
      alignItems: 'center',
      padding: 10,
    },
  }
)